   SELECT distinct
                                        ISNULL(TRIM(so.szCustPoId), '') as szFPOid,so.gdApprovedId,so.szOrdertypeId,
                                        so.szCustId,
                                        so.szFSoId,
                                        do.szDoId,
                                        do.szCarrierId,
                                        cust.szName as custNm,isnull(so.dtmcreated,datefromparts(1900,1,1))dtmOrder,
                                        do.szVehicleNumber,ISNULL(do.dtmCreated, '1900-01-01') as dtmCreatedDO,
                                        do.szDriverName,ISNULL(so.dtmCreated, '1900-01-01') as dtmCreatedSO ,	isnull(invoice.dtmCreated,'1900-01-01')dtmCreatedInv,
                                        so.szPaymentTermId,isnull(do.dtmDelivery,'1900-01-01')dtmDelivery,
	                                    soi.szProductId,
	                                    case when soi.decQty = 0 then soi.decUomQty else soi.decQty end as decQty,
	                                    soi.decTax as decPPN,
	                                    soi.decDPP,case when so.bApplied = 1 or so.bVoid = 1 then ''
        when so.bApplied =0 and so.bVoid =0 then '1' 
		else cast( isnull((select top 1 btApprovedLevel from BOS_GEN_ApprovedItem BGADitem 
	                                            where gdApprovedId = so.gdApprovedId order by BGADitem.btApprovedLevel desc)
	                                            ,0) + 1 as nvarchar) end 
		currentApprovalLevel,
                                        case when soi.bTaxable = 1 and (soi.decDPP+soi.decTax)<>0 then soi.decPrice * soi.decDPP/(soi.decDPP+soi.decTax) else soi.decPrice end decPrice,
isnull(gd1.dtmApproved,'1900-01-01') dtmApproved1,gd1.bApproved bApproved1,
isnull(gd2.dtmApproved,'1900-01-01') dtmApproved2,gd2.bApproved bApproved2,
Isnull(gd3.dtmApproved,'1900-01-01') dtmApproved3,gd3.bApproved bApproved3,
	                                    bonus.decDisc1DPP,
	                                    bonus.decDisc2DPP,
	                                    bonus.decDiscFakturDPP,
	                                    bonus.decDisc1Tax,
	                                    bonus.decDisc2Tax,
	                                    bonus.decDiscFakturTax,
                                        prod.szName  as prodNm
	                                    ,isnull(cust.szCategory_2, '')as szCustCat2
	                                    ,isnull(custCat.szDescription,'')as szCustCat2Desc
	                                    ,isnull(do.dtmDelivery, datefromparts(1900,1,1)) dtmDelivery
                                        ,so.bVoid
                                    from bos_sd_fso so 
                                    LEFT JOIN BOS_SD_FSoItem soi ON soi.szFSoId = so.szFSoId and soi.szProductId <>''
                                    LEFT JOIN BOS_INV_Product prod ON soi.szProductId = prod.szProductId
                                    LEFT JOIN bos_ar_customer cust ON cust.szCustId = so.szCustId
                                    left join BOS_SD_FDo do on do.szDoId = so.szFDoReffId
                                    left join BOS_SD_FInvoice invoice on invoice.szFInvoiceId = do.szFInvoiceId
                                    left join BOS_AR_Category custCat on custCat.szCategoryId = cust.szCategory_2
									left join (
									select soItem.szFSoId,bonus.szProductId, bonus.szParentId, bonus.szPaymentType, bonus.szOrderItemTypeId,
									sum(case when soItem.szPrincipalDiscRefId  = 'Invoice Disc. Item' then 
													case when soItem.bTaxable = 1 and (soItem.decDPP+soItem.decTax) <> 0
														then bonus.decBonusAmount *  soitem.decdpp/(soItem.decDPP+soItem.decTax) else bonus.decBonusAmount end
										else 0 end)as decDisc1DPP,

									sum(case when soItem.szPrincipalDiscRefId  = 'Invoice Disc. Item' then 
													case when soItem.bTaxable = 1 and (soItem.decDPP+soItem.decTax) <> 0 
														then bonus.decBonusAmount *  soitem.decTax/(soItem.decDPP+soItem.decTax) else 0 end
										else 0 end)as decDisc1Tax,

									sum(case when soItem.szPrincipalDiscRefId  = 'Invoice Disc. Item 2' then 
													case when soItem.bTaxable = 1 and (soItem.decDPP+soItem.decTax) <> 0 
													then bonus.decBonusAmount *  soitem.decdpp/(soItem.decDPP+soItem.decTax) else bonus.decBonusAmount end
										else 0 end)as decDisc2DPP,

									sum(case when soItem.szPrincipalDiscRefId  = 'Invoice Disc. Item 2' then 
													case when soItem.bTaxable = 1 and (soItem.decDPP+soItem.decTax) <> 0
													then bonus.decBonusAmount *  soitem.decTax/(soItem.decDPP+soItem.decTax) else bonus.decBonusAmount end
										else 0 end)as decDisc2Tax,

									sum(case when soItem.szPrincipalDiscRefId  = 'Invoice Disc.' then 
												case when soItem.bTaxable = 1 and (soItem.decDPP+soItem.decTax) <> 0
												then bonus.decBonusAmount *  soitem.decdpp/(soItem.decDPP+soItem.decTax) else bonus.decBonusAmount end
										else 0 end)as decDiscFakturDPP,

										sum(case when soItem.szPrincipalDiscRefId  = 'Invoice Disc.' then 
												case when soItem.bTaxable = 1 and (soItem.decDPP+soItem.decTax) <> 0
												then bonus.decBonusAmount *  soitem.decTax/(soItem.decDPP+soItem.decTax) else bonus.decBonusAmount end
										else 0 end)as decDiscFakturTax

									from BOS_SD_FSoItem soItem
									left join BOS_SD_FSoItemBonusSource bonus on bonus.szFSoId = soItem.szFSoId and soitem.shItemNumber = bonus.shItemNumber
									where bonus.szProductId is not null group by soItem.szFSoId,bonus.szProductId, bonus.szParentId, bonus.szPaymentType, bonus.szOrderItemTypeId
									) bonus 
									on bonus.szFSoId = soi.szFSoId and soi.szProductId = bonus.szProductId and bonus.szParentId=soi.szParentId
									and bonus.szPaymentType=soi.szPaymentType and bonus.szOrderItemTypeId=soi.szOrderItemTypeId
left join BOS_GEN_ApprovedItem gd1 on gd1.gdApprovedId = so.gdApprovedId and gd1.btApprovedLevel =1
left join BOS_GEN_ApprovedItem gd2 on gd2.gdApprovedId = so.gdApprovedId and gd2.btApprovedLevel =2
left join BOS_GEN_ApprovedItem gd3 on gd3.gdApprovedId = so.gdApprovedId and gd3.btApprovedLevel =3
                                    where 1=1 and so.szFSoId not in (select distinct szFSoId from MSYN_SD_SalesInquiry) and so.dtmOrder >= ? AND  so.dtmOrder < ?